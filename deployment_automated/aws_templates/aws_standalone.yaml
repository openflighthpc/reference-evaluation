---
AWSTemplateFormatVersion: "2010-09-09"

Description: Description of this template

Metadata:
  Instances:
    Description: "1 login node"
  Databases: 
    Description: "No databases involved here"

Parameters:

  KeyPair:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: ivan-keypair
    Description: Name of an existing key pair to use for the instances

  InstanceAmi:
    Type: String
    Default: ami-04b88ad7b25bc74ef
    Description: An ami uploaded to AWS

  InstanceSize:
    Type: String
    Default: t3.small
    Description: Enter an instance size.

  InstanceDiskSize:
    Type:  Number
    Description: The disk size of this instance.
    Default: 20

  CloudInit:
    Type: String
    Description: Cloudinit data for this node

Resources:

  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  MySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.10.10.0/24
      MapPublicIpOnLaunch: true

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: My Security Group
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8888
          ToPort: 8888
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5900
          ToPort: 5911
          CidrIp: 0.0.0.0/0
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 10.10.10.0/24
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
          FromPort: 0
          ToPort: 65535

  MyInternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC

  MyRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway
  
  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MySubnet
      RouteTableId: !Ref MyRouteTable


  StandaloneInstance:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: 
        Ref: InstanceAmi
      InstanceType: 
        Ref: InstanceSize
      KeyName: 
        Ref: KeyPair 
      SecurityGroupIds: 
        - !Ref MySecurityGroup
      SubnetId: !Ref MySubnet
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: gp2
            VolumeSize: 
              Ref: InstanceDiskSize
            DeleteOnTermination: 'true'
            Encrypted: 'true'
      UserData: 
          Ref: CloudInit

Outputs:
  PrivateIp:
    Description: The private IP address of the standalone node
    Value: { Fn::GetAtt: [StandaloneInstance, PrivateIp] }

  PublicIp:
    Description: Floating IP address of standalone node
    Value: { Fn::GetAtt: [ StandaloneInstance, PublicIp ] }
