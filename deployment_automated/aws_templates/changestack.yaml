---
AWSTemplateFormatVersion: "2010-09-09"

Description: two compute nodes

Metadata:
  Instances:
    Description: "two compute nodes"
  Databases: 
    Description: "No databases involved here"

Parameters:

  KeyPair:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: ivan-keypair
    Description: Name of an existing key pair to use for the instances

  InstanceAmi:
    Type: String
    Default: ami-04b88ad7b25bc74ef
    Description: An ami uploaded to AWS

  InstanceSize:
    Type: String
    Default: t3.small
    Description: Enter an instance size

  SecurityGroup:
    Type: String
    Default: sg-099219b43ee588b21
    Description: The security group that has already been set up.

  InstanceSubnet:
    Type: String
    Description: The subnet to be used.
    Default: subnet-55d8582f

  IpData:
    Type: String
    Description: ip data from the standalone node

  KeyData:
    Type: String
    Description: key data from the standalone node

  InstanceDiskSize:
    Type:  Number
    Description: The disk size of these instances.
    Default: 10

Resources:
  
  Node1:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: 
        Ref: InstanceAmi
      InstanceType: 
        Ref: InstanceSize
      KeyName: 
        Ref: KeyPair 
      SecurityGroupIds: 
        - sg-099219b43ee588b21
      SubnetId: subnet-55d8582f
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: gp2
            VolumeSize: 
              Ref: InstanceDiskSize
            DeleteOnTermination: 'true'
            Encrypted: 'true'
      UserData: !Base64 
          Fn::Join:
            - ''
            - - "#cloud-config\n"
              - "write_files:\n"
              - "  - content: |\n"
              - "      SERVER="
              - Ref: IpData
              - "\n"
              - "    path: /opt/flight/cloudinit.in\n"
              - "    permissions: '0644'\n"
              - "    owner: root:root\n"
              - "users:\n"
              - "  - default\n"
              - "  - name: root\n"
              - "    ssh_authorized_keys:\n"
              - "      - "
              - Ref: KeyData
              - "\n"
              - "  - name: flight\n"
              - "    ssh_authorized_keys:\n"
              - "      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWD9MAHnS5o6LrNaCb5gshU4BIpYfqoE2DCW9T2u3v4xOh04JkaMsIzwGc+BNnCh+NlkSE9sPVyPODCVnLnHdyyNfUkLBIUGCM/h9Ox7CTnsbmhnv3tMp4OD2dnGl+wOXWo/0YrWA0cpcl5UchCpZYMGscR4ohg8+/panBJ0//wmQZmCUZkQ20TLumYlL9HdmFl2SO2vraY+nBQCoHtPC80t4BmbPg5atEnQVMngpsRqSykIoUEQKh49t649cF3rBboZT+AmW+O1GWVYu7qlUxqIsdTRJbqbhZ/W2n3rraQh5CR/hOyYikkdn3xqm7Rom5iURvWd6QBh0LhP1UPRIT"
              - "\n"
              

  Node2:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: 
        Ref: InstanceAmi
      InstanceType: 
        Ref: InstanceSize
      KeyName: 
        Ref: KeyPair 
      SecurityGroupIds: 
        - sg-099219b43ee588b21
      SubnetId: subnet-55d8582f
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: gp2
            VolumeSize: 
              Ref: InstanceDiskSize
            DeleteOnTermination: 'true'
            Encrypted: 'true'
      UserData: !Base64 
          Fn::Join:
            - ''
            - - "#cloud-config\n"
              - "write_files:\n"
              - "  - content: |\n"
              - "      SERVER="
              - Ref: IpData
              - "\n"
              - "    path: /opt/flight/cloudinit.in\n"
              - "    permissions: '0644'\n"
              - "    owner: root:root\n"
              - "users:\n"
              - "  - default\n"
              - "  - name: root\n"
              - "    ssh_authorized_keys:\n"
              - "      - "
              - Ref: KeyData
              - "\n"
              - "  - name: flight\n"
              - "    ssh_authorized_keys:\n"
              - "      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWD9MAHnS5o6LrNaCb5gshU4BIpYfqoE2DCW9T2u3v4xOh04JkaMsIzwGc+BNnCh+NlkSE9sPVyPODCVnLnHdyyNfUkLBIUGCM/h9Ox7CTnsbmhnv3tMp4OD2dnGl+wOXWo/0YrWA0cpcl5UchCpZYMGscR4ohg8+/panBJ0//wmQZmCUZkQ20TLumYlL9HdmFl2SO2vraY+nBQCoHtPC80t4BmbPg5atEnQVMngpsRqSykIoUEQKh49t649cF3rBboZT+AmW+O1GWVYu7qlUxqIsdTRJbqbhZ/W2n3rraQh5CR/hOyYikkdn3xqm7Rom5iURvWd6QBh0LhP1UPRIT"
              - "\n"
              
Outputs:

  PrivateIpNode1:
    Description: The private IP address of the standalone node
    Value: { Fn::GetAtt: [ Node1, PrivateIp] }

  PublicIpNode1:
    Description: Floating IP address of standalone node
    Value: { Fn::GetAtt: [ Node1, PublicIp ] }
    

  PrivateIpNode2:
    Description: The private IP address of the standalone node
    Value: { Fn::GetAtt: [ Node2, PrivateIp] }

  PublicIpNode2:
    Description: Floating IP address of standalone node
    Value: { Fn::GetAtt: [ Node2, PublicIp ] }
    
